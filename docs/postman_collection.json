{
  "info": {
    "name": "CleanShort URL Shortener API",
    "description": "Complete API collection for CleanShort URL shortener service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "cleanshort-api-collection"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_email",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "user_password",
      "value": "TestPassword123!",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/healthz",
              "host": ["{{base_url}}"],
              "path": ["healthz"]
            },
            "description": "Check if the application is healthy"
          },
          "response": []
        },
        {
          "name": "Readiness Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/readyz",
              "host": ["{{base_url}}"],
              "path": ["readyz"]
            },
            "description": "Check if the application is ready (includes database connectivity)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    console.log('User registered successfully:', response.email);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"{{user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh_token);",
                  "    console.log('Login successful, tokens saved');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"{{user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Authenticate user and get tokens"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    console.log('Token refreshed successfully');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "refresh"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": []
        },
        {
          "name": "Logout User",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "logout"]
            },
            "description": "Logout user and revoke refresh token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Links Management",
      "item": [
        {
          "name": "Create Link with Custom Code",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('link_id', response.id);",
                  "    pm.collectionVariables.set('short_code', response.short_code);",
                  "    console.log('Link created:', response.short_url);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"target_url\": \"https://example.com/article/123\",\n  \"short_code\": \"my-article-123\",\n  \"title\": \"Favorite Article\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/links",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links"]
            },
            "description": "Create a new short link with custom short code"
          },
          "response": []
        },
        {
          "name": "Create Link with Auto-Generated Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"target_url\": \"https://example.com/page\",\n  \"title\": \"Example Page\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/links",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links"]
            },
            "description": "Create a new short link with auto-generated short code"
          },
          "response": []
        },
        {
          "name": "List All Links",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/links?limit=20&offset=0",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            },
            "description": "Get a paginated list of user's links"
          },
          "response": []
        },
        {
          "name": "List Active Links Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/links?active=true",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links"],
              "query": [
                {
                  "key": "active",
                  "value": "true"
                }
              ]
            },
            "description": "Get only active links"
          },
          "response": []
        },
        {
          "name": "Search Links",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/links?query=article",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links"],
              "query": [
                {
                  "key": "query",
                  "value": "article"
                }
              ]
            },
            "description": "Search links by short code or title"
          },
          "response": []
        },
        {
          "name": "Get Specific Link",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/links/{{link_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links", "{{link_id}}"]
            },
            "description": "Get details of a specific link"
          },
          "response": []
        },
        {
          "name": "Update Link Title",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Article Title\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/links/{{link_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links", "{{link_id}}"]
            },
            "description": "Update the title of a link"
          },
          "response": []
        },
        {
          "name": "Update Link URL",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"target_url\": \"https://example.com/new-url\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/links/{{link_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links", "{{link_id}}"]
            },
            "description": "Update the target URL of a link"
          },
          "response": []
        },
        {
          "name": "Deactivate Link",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"is_active\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/links/{{link_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links", "{{link_id}}"]
            },
            "description": "Deactivate a link"
          },
          "response": []
        },
        {
          "name": "Delete Link",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/links/{{link_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "links", "{{link_id}}"]
            },
            "description": "Delete a link permanently"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Public Redirect",
      "item": [
        {
          "name": "Test Redirect",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/{{short_code}}",
              "host": ["{{base_url}}"],
              "path": ["{{short_code}}"]
            },
            "description": "Test the public redirect functionality"
          },
          "response": []
        },
        {
          "name": "Test Non-Existent Link",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/non-existent-code",
              "host": ["{{base_url}}"],
              "path": ["non-existent-code"]
            },
            "description": "Test redirect with non-existent short code"
          },
          "response": []
        }
      ]
    }
  ]
}